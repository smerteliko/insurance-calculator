name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, curl, intl, json, zip
          coverage: none

      - name: Remove outdated composer.lock
        run: |
          # Если composer.lock существует но не совместим с composer.json - удаляем его
          if [ -f composer.lock ]; then
            if ! composer validate --strict --no-check-lock 2>/dev/null; then
              echo "Removing outdated composer.lock"
              rm composer.lock
            fi
          fi

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Create .env file
        run: |
          if [ -f .env.test ]; then
            cp .env.test .env
          else
            cp .env.dist .env
          fi
          echo "APP_SECRET=$(openssl rand -hex 32)" >> .env

      - name: Run basic health check
        run: |
          # Простая проверка что приложение работает
          if [ -f "bin/console" ]; then
            php bin/console --version
          fi
          echo "✅ Application dependencies installed successfully"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, curl, intl, json, zip

      - name: Remove outdated composer.lock
        run: |
          if [ -f composer.lock ]; then
            if ! composer validate --strict --no-check-lock 2>/dev/null; then
              echo "Removing outdated composer.lock"
              rm composer.lock
            fi
          fi

      - name: Install production dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader --no-dev

      - name: Setup production environment
        run: |
          cp .env.dist .env
          echo "APP_ENV=prod" >> .env
          echo "APP_DEBUG=0" >> .env
          echo "APP_SECRET=$(openssl rand -hex 32)" >> .env

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r bin config public src templates translations vendor .env composer.json composer.lock symfony.lock deployment/
          mkdir -p deployment/var/log
          mkdir -p deployment/var/cache
          chmod -R 755 deployment/var
          cd deployment && zip -r ../insurance-calculator.zip .

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: insurance-calculator
          path: insurance-calculator.zip

      - name: Show deployment info
        run: |
          echo "🚀 Symfony 7 Application is ready for deployment!"
          echo "📦 Download the artifact: insurance-calculator.zip"
          echo "🌐 Deploy to any PHP 8.2+ hosting"