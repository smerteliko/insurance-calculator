name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, curl, intl, json, pdo, tokenizer
          coverage: xdebug
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Create .env file if not exists
        run: |
          if [ ! -f .env ]; then
            echo "Creating .env file for Symfony..."
            echo "APP_ENV=test" > .env
            echo "APP_DEBUG=1" >> .env
            echo "DATABASE_URL=sqlite:///:memory:" >> .env
          fi

      - name: Clear cache
        run: php bin/console cache:clear --env=test --no-debug

      - name: Execute tests
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Check PHP syntax
        run: find src tests -name "*.php" -exec php -l {} \;